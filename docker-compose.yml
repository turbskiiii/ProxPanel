version: '3.8'

services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://proxpanel:ProxPanelSecure2024!@mysql:3306/proxpanel
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - PROXMOX_HOST=your-proxmox-host
      - PROXMOX_USERNAME=your-proxmox-username
      - PROXMOX_PASSWORD=your-proxmox-password
      - PROXMOX_REALM=pve
      - PROXMOX_PORT=8006
      - PROXMOX_NODE=your-proxmox-node
    depends_on:
      - mysql
      - redis
    networks:
      - proxpanel-network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ProxPanelRoot2024!
      MYSQL_DATABASE: proxpanel
      MYSQL_USER: proxpanel
      MYSQL_PASSWORD: ProxPanelSecure2024!
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    ports:
      - "3306:3306"
    networks:
      - proxpanel-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - proxpanel-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - proxpanel-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  proxpanel-network:
    driver: bridge
